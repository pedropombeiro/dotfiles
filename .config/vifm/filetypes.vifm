" ------------------------------------------------------------------------------
" File types association
" ------------------------------------------------------------------------------

let $BAT_CONFIG_PATH=expand('$HOME/.config/bat/vifm.config')
let $BAT_THEME='gruvbox-dark-vifm'

" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
"
" The first entry is the default program to be used with a matching file.
" The other programs for the file type can be accessed via :file command.
" The command macros like %f, %F, %d, %D may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.
" Spaces in an app name must be escaped, for example: QuickTime\ Player.app

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of the following formats:
"
" :filetype patterns FUSE_MOUNT|mount_cmd %SOURCE_FILE %DESTINATION_DIR
"
" %SOURCE_FILE and %DESTINATION_DIR are filled in at runtime.
"
" Example:
"   :filetype *.zip,*.[jwe]ar FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype patterns FUSE_MOUNT2|mount_cmd %PARAM %DESTINATION_DIR
"
" %PARAM and %DESTINATION_DIR are filled in at runtime.
"
" Example:
"   :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
"
" %PARAM value is the first line of the matched file, example: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.  There is also %FOREGROUND, which is useful for entering passwords.

" These are some of the macros that can be used in the action part:
"  %a for user arguments
"  %c for current file under the cursor
"  %C for current file under the cursor of inactive pane
"  %f for selected file(s)
"  %F for selected file(s) of inactive pane
"  %b is the same as %f %F
"  %d for current directory name
"  %D for current directory name of inactive pane
"  %r{x} for list of files in register {x}
"  %m runs the command in a menu window
"  %u uses command's output to build a file list
"  see `:help vifm-macros` and `:help vifm-filename-modifiers` for more

fileviewer */,.*/ lsd --tree --color always --icon always --directory-only --group-directories-first --ignore-glob '.git' %c/* 2>/dev/null

" Pdf
filetype {*.pdf},<application/pdf>
       \ {Open in Preview}
       \ open -a Preview.app,
       \ {Open in Skim}
       \ open -a Skim.app,
fileviewer {*.pdf},<application/pdf> pdftotext -nopgbrk %d/%c -
" Epub
filetype {*.epub},<application/epub+zip>
       \ {Open in epr}
       \ epr %d/%c,
       \ {Open in Preview}
       \ open -a Preview.app,
fileviewer {*.epub},<application/epub+zip> epr -d %d/%c

" PostScript
filetype {*.ps,*.eps,*.ps.gz},<application/postscript> open -a Preview.app

" Djvu
filetype {*.djvu},<image/vnd.djvu> open -a MacDjView.app

" sql databases
filetype {*.sqlite*},<application/vnd.sqlite3> sqlite3 %d/%c
fileviewer {*.sqlite*},<application/vnd.sqlite3> file --brief --preserve-date %d/%c && echo && sqlite3 %d/%c .tables
fileviewer {.psqlrc,.pspg_history,.psql_history,.sqlite_history} bat --language=SQL -- %d/%c

fileviewer {.justfile,*.justfile,justfile}
            \ just --justfile %d/%c --list,
            \ bat %d/%c,
            \ echo "Evaluated variables:" &&
            \ just --justfile %d/%c --evaluate,

" Audio
filetype {*.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus,
         \*.aac,*.mpga},
        \<audio/*>
       \ {Open in Music}
       \ open -a Music.app,
       \ {Open in QuickTime Player}
       \ open -a QuickTime\ Player.app,
       \ {Open in IINA}
       \ open -a IINA.app,
fileviewer {*.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus,
           \*.aac,*.mpga},
          \<audio/*>
         \ ffprobe -hide_banner -pretty %d/%c 2>&1,file --brief --preserve-date

" Video
filetype {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
         \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
         \*.as[fx],*.unknown_video},
        \<video/*>
       \ {Open in QuickTime Player}
       \ open -a QuickTime\ Player.app,
       \ {Open in IINA}
       \ open -a IINA.app,
       \ {Open in VLC}
       \ open -a VLC.app,
fileviewer {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
           \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
           \*.as[fx],*.unknown_video},
          \<video/*>
         \ ffprobe -hide_banner -pretty %d/%c 2>&1,file --brief --preserve-date

" Web
filetype {*.xhtml,*.html,*.htm},<text/html>
       \ {Open in Safari}
       \ open -a Safari.app,
       \ {Open in Firefox}
       \ open -a Firefox.app,
       \ {Open in Chrome}
       \ open -a Google\ Chrome.app,
       \ {Open in vim}
       \ nvim,
fileviewer {*.xhtml,*.html,*.htm},<text/html> w3m -dump -T text/html, bat -- %d/%c

" Object
fileviewer {*.o,*.a},<application/x-object> nm %f | bat --file-name %f

" Image
filetype {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
       \ open -a Preview.app,
fileviewer {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
       \ imgpreview %d/%c %px %py %pw %ph,
fileviewer {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
       \ exiftool %d/%c,

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f %S,

" SHA1
filetype *.sha1
       \ {Check SHA1 hash sum}
       \ shasum -c %f %S,

" SHA256
filetype *.sha256
       \ {Check SHA256 hash sum}
       \ shasum -a 256 -c %f %S,

" SHA512
filetype *.sha512
       \ {Check SHA512 hash sum}
       \ shasum -a 512 -c %f %S,

" Torrent
filetype {*.torrent},<application/x-bittorrent> open -a Transmission.app
fileviewer {*.torrent},<application/x-bittorrent>
         \ dumptorrent -v %d/%c,
         \ transmission-show %d/%c

" Extract zip files
filetype {*.zip},<application/zip,application/java-archive>
       \ mkdir %f:r && unzip %f -d %f:r
fileviewer {*.zip,*.jar,*.war,*.ear},
          \<application/zip,application/java-archive>
          \ unzip -l %f

" Extract tar archives
filetype {*.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz,*.tar.zst,
         \*.tzst},
        \<application/x-tar>
       \ tar -vxf %f
fileviewer {*.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz,*.tar.zst,
           \*.tzst},
          \<application/x-tar>
         \ tar -tf %f

" Extract .bz2 archives
filetype *.bz2 bzip2 -d %f

" Extract .gz files
filetype *.gz gunzip %f
fileviewer *.gz gunzip --list %f

" Extract rar files
filetype *.rar unrar x -y -c- -ad %f %s
fileviewer *.rar unrar lb %d/%c

" Mount borg archives
filetype *.borg
  \ {Mount with Borgmatic}
  \ FUSE_MOUNT2|borg mount %PARAM %DESTINATION_DIR %FOREGROUND

" Mount .dmg archives
filetype *.dmg open

" Mount disk .img
filetype *.img open

" Open .pkg binaries
filetype *.pkg open

" Office files
filetype {*.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx,*.ppt},
         \<application/vnd.openxmlformats-officedocument.*,
          \application/msword,
          \application/vnd.ms-excel>
       \ open -a LibreOffice.app
fileviewer {*.doc},<application/msword> antiword -
fileviewer {*.docx},
          \<application/
           \vnd.openxmlformats-officedocument.wordprocessingml.document>
         \ pandoc -s -t markdown -- %f

" PLIST files
filetype {*.plist}, open -a 'PLIST Editor.app'
fileviewer {*.plist}, plutil -p -- %f

" .ssh/config
fileviewer {{**/.ssh/*config*}} bat --language='SSH Config' -- %d/%c

" Nginx configs
fileviewer {{**/nginx/*.conf}} bat --language='nginx' -- %d/%c

" .git/objects
fileviewer {{**/.git/objects/**/*}}
            \ file --brief --preserve-date --uncompress -- %d/%c &&
            \ echo "----------------------" &&
            \ git cat-file -p %d:t%f

" Syntax highlighting in preview
"
" Explicitly set highlight type for some extensions
"
" 256-color terminal
" fileviewer *.[ch],*.[ch]pp,*.html,*.css,*.less,*.js,*.java,*.go,*.py,*.coffee,*.dart,*.lua,*.md,*.rb,*.ts,*.php,*.cs,*.vim,*.conf,*.swift,*.json,*.xml highlight -O xterm256 -s dante %d/%c --force
" fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %d/%c
"
" 16-color terminal
" fileviewer *.c,*.h highlight -O ansi -s dante %d/%c
"
" Or leave it for automatic detection

fileviewer {.pryrc,.irb_history,Dangerfile,*.ru},<text/x-ruby> bat --language=Ruby -- %d/%c

filetype {vi*rc,*.vifm,*.vim} nvim
fileviewer {vi*rc,*.vifm,*.vim} bat --language=VimL -- %d/%c

filetype {*.json},<application/json>
           \ {Open in vim} nvim,
           \ {Browse with jless} jless %c,
fileviewer {*.json},
           \<application/json>
           \ cat %d/%c | jq | bat --language=JSON --file-name %c -,

fileviewer {*.exe},<application/x-executable,application/x-pie-executable,application/x-mach-binary>
            \ dumpexe %c
fileviewer <application/x-sharedlib> dumplib %c
" fileviewer *[^/] pygmentize -O "style=gruvbox-dark" -f terminal256 -g %d/%c

" Log files
filetype {*.log,*.log.[1-9]} nvim
fileviewer {*.log,*.log.[1-9]} bat --language log -- %d/%c

" Text files
filetype {*.ac,*.c,*.cpp,*.h,*.hpp,*.go,*.py,*.rb,*.txt},<text/*> nvim
fileviewer {*.ac,*.c,*.cpp,*.h,*.hpp,*.go,*.py,*.rb,*.txt},<text/*> bat -- %d/%c

" Man page
filetype {*.[1-8]},<text/troff> man ./%d/%c
fileviewer {*.[1-8]},<text/troff> man ./%d/%c | col -b

" Fallback
filetype * open
fileviewer * file --brief --preserve-date --uncompress -- %d/%c
