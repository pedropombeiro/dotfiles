" Inspired from sample configuration file for vifm on OSX (last updated: 2 April, 2023)

" ------------------------------------------------------------------------------
" Main settings
" ------------------------------------------------------------------------------

" Command used to edit files in various contexts.  The default is nvim.
" If you would like to use another vi clone such as Elvis or Vile
" you will need to change this setting.
"
" Mind that due to `filetype * open` below by default the editor won't be used
" for opening files via l/Enter keys.  Comment that line out to change the
" behaviour.
if executable('nvim')
  set vicmd=nvim
elseif executable('vim')
  set vicmd=vim
elseif $EDITOR != ''
  echo 'Note: using `'.$EDITOR.'` as an editor'
  let &vicmd = $EDITOR
endif

set shell=/bin/sh " Speed up previews

if expand('%D') == expand('$PWD')
  " Mimic Ranger layout
  view
  set millerview
  set dotdirs=treeleafsparent
endif
set milleroptions=lsize:1,csize:2,rsize:0,rpreview:all

" Show title in host terminal
set title

" Set a realy high number so that we don't timeout (important for <space> for
" instance).
set timeoutlen=1000000

" Print relative line number in front of each file name
" when 'lsview' option is turned off.
set relativenumber
" Minimal number of characters for line number field.
set numberwidth=2

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.
set syscalls

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.
set trash
set trashdir="~/.local/share/vifm/Trash"

" What should be saved automatically on restarting vifm.  Drop "savedirs"
" value if you don't want vifm to remember last visited directories for you.
set vifminfo=dhistory,chistory,state,shistory,
            \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" This is how many directories to store in the directory history.
set history=1000

set scrolloff=4
set tabstop=2
set nowrap " Disable wrapping on preview window by default

" Automatically resolve symbolic links on l or Enter.
set nofollowlinks

" Natural sort of (version) numbers within text.
set sortnumbers

" Maximum number of changes that can be undone.
set undolevels=100

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you would rather use a plain text help file set novimhelp.
set novimhelp " vimhelp will actually load neovim's help file

" If you would like to run an executable file when you
" press Enter, l or Right Arrow, set this.
set norunexec

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.
set timefmt='%Y/%m/%d %H:%M'

" Show list of matches on tab completion in command-line mode
set wildmenu

" Display completions in a form of popup with descriptions of the matches
set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

set tuioptions=psvlu

" Ignore case in search patterns unless it contains at least one uppercase
" letter
set ignorecase
set smartcase

" Don't highlight search results automatically
set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=4

" Don't do too many requests to slow file systems
set slowfs=curlftpfs

" Set custom status line look
set statusline="%1*%{extcached('git_branch', expand('%d'), expand('git_branch'))}%2* %{extcached('readlink', expand('%c'), expand('readlink %c'))} %=
                \%3*%4* %d %5*%6* 󰄦%7* %-10E %8* %1* %-11A %8* %1* %10u:%-7g  "
" Show number of hidden files in ruler
set rulerformat=' %P  %2l:%S%[  󰘓 +%x %]'

" List of color schemes to try (picks the first one supported by the terminal)
colorscheme gruvbox Default-256 Default

" ------------------------------------------------------------------------------
" Bookmarks
" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]

mark c ~/.config/
mark h ~/
mark z ~/.config/vifm/

" ------------------------------------------------------------------------------
" Source other vimrc files
" ------------------------------------------------------------------------------

source $VIFM/commands.vifm
source $VIFM/filetypes.vifm
source $VIFM/keymaps.vifm
source $VIFM/local.vifm

" ------------------------------------------------------------------------------
" Panel configuration examples
" ------------------------------------------------------------------------------

" Customize view columns a bit (enable ellipsis for truncated file names)
" set viewcolumns=-{name}..,6{}.

" Show vertical border
" set fillchars=vborder:│

" Filter-out build and temporary files
" filter! {*.lo,*.o,*.d,*.class,*.pyc,*.pyo,.*~}
filter /(.*\.zwc|^\.DS_Store|^\.localized)$/

" ------------------------------------------------------------------------------
" Various customization examples
" ------------------------------------------------------------------------------

" Use fd instead of find
set findprg='fd %p'
" Use rg instead of grep
set grepprg='rg --line-number %i %a %s'

" Add additional place to look for executables
" let $PATH = $HOME.'/bin/fuse:'.$PATH

" Block particular shortcut
" nnoremap <left> <nop>

" Export IPC name of current instance as environment variable and use it to
" communicate with the instance later.
"
" It can be used in some shell script that gets run from inside vifm, for
" example, like this:
"     vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"
"
" let $VIFM_SERVER_NAME = v:servername

" Activate screen/tmux support
" screen!
